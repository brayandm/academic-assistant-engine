version: "3.9"

services:

    engine_server:
        build:
            context: .
            dockerfile: docker/Dockerfile-server
        ports:
            - "0.0.0.0:5000:5000"
        networks:
            - academic-assistant-local
        volumes:
            - .:/app
        environment:
            - RABBITMQ_USER=${RABBITMQ_USER}
            - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
            - RABBITMQ_HOST=${RABBITMQ_HOST}
            - RABBITMQ_PORT=${RABBITMQ_PORT}
            - RABBITMQ_VHOST=${RABBITMQ_VHOST}
            - REDIS_PASSWORD=${REDIS_PASSWORD}
            - REDIS_HOST=${REDIS_HOST}
            - REDIS_PORT=${REDIS_PORT}
            - REDIS_DB_NUMBER=${REDIS_DB_NUMBER}
            - ENGINE_API_TOKEN=${ENGINE_API_TOKEN}
        depends_on:
            engine_redis:
                condition: service_healthy
            engine_rabbitmq:
                condition: service_healthy
        restart: always
        command: ["sh", "-c", "cd engine/server && flask run --reload --host=0.0.0.0"]

    engine_worker: 
        build:
            context: .
            dockerfile: docker/Dockerfile-worker
        networks:
            - academic-assistant-local
        volumes:
            - .:/app
        environment:
            - RABBITMQ_USER=${RABBITMQ_USER}
            - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
            - RABBITMQ_HOST=${RABBITMQ_HOST}
            - RABBITMQ_PORT=${RABBITMQ_PORT}
            - RABBITMQ_VHOST=${RABBITMQ_VHOST}
            - REDIS_PASSWORD=${REDIS_PASSWORD}
            - REDIS_HOST=${REDIS_HOST}
            - REDIS_PORT=${REDIS_PORT}
            - REDIS_DB_NUMBER=${REDIS_DB_NUMBER}
            - ENGINE_API_TOKEN=${ENGINE_API_TOKEN}
        depends_on:
            engine_redis:
                condition: service_healthy
            engine_rabbitmq:
                condition: service_healthy
        restart: always
        command: ["sh", "-c", "celery -A engine.celery.app worker --loglevel=INFO"]

    engine_redis:
        build:
            context: .
            dockerfile: docker/Dockerfile-redis
            args:
                REDIS_PASSWORD: ${REDIS_PASSWORD}
        networks:
            - academic-assistant-local
        restart: always
        healthcheck:
            test: ["CMD", "redis-cli", "auth", "${REDIS_PASSWORD}"]
            timeout: 5s
            retries: 3
        command: redis-server /usr/local/etc/redis/redis.conf
    
    engine_rabbitmq:
        image: rabbitmq:3.10.7-management-alpine
        networks:
            - academic-assistant-local
        restart: always
        environment:
            - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
            - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
            - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_VHOST}
        healthcheck:
            test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
            timeout: 5s
            retries: 3

    engine_flower:
        build:
            context: .
            dockerfile: docker/Dockerfile-flower
        ports:
            - "5555:5555"
        networks:
            - academic-assistant-local
        environment:
            FLOWER_BASIC_AUTH: ${FLOWER_USER}:${FLOWER_PASSWORD}
            FLOWER_BROKER_API: http://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@${RABBITMQ_HOST}:15672/api/
            CELERY_BROKER_URL: amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@${RABBITMQ_HOST}:${RABBITMQ_PORT}/${RABBITMQ_VHOST}
            CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB_NUMBER}
        depends_on:
            engine_worker:
                condition: service_started
            engine_redis:
                condition: service_healthy
            engine_rabbitmq:
                condition: service_healthy
        restart: always

networks:
    academic-assistant-local:
        driver: bridge
        external: true